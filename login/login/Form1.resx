<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAMDAwMDAwQEBAQFBQUFBQcHBgYHBwsICQgJCAsRCwwLCwwL
        EQ8SDw4PEg8bFRMTFRsfGhkaHyYiIiYwLTA+PlT/2wBDAQMDAwMDAwQEBAQFBQUFBQcHBgYHBwsICQgJ
        CAsRCwwLCwwLEQ8SDw4PEg8bFRMTFRsfGhkaHyYiIiYwLTA+PlT/wgARCAC7AU0DASIAAhEBAxEB/8QA
        HAAAAgMBAQEBAAAAAAAAAAAAAgMAAQQFBgcI/9oACAEBAAAAAPwhba0b39+DBQEm5kpKmNOrqw+dKqmE
        ljjaWRVt6rdPYGSqTW5gqWAkRGwi895dzrHOxjCOchc6m1ztZMKrrQ1NVQBZMooPAz2C0NMjkPzfV7eR
        8nNoSNjO824FCEbIhPR5eFdZ7bZVGaD6XIuSZgCVWDT6lkkBYknO/qnh5K0Q7khab7WflHUteeSsSQ6H
        pLqlqzpdp6hxPBzy5CY4bvt8tFiV1ihY0UIdL0dRCMOnb0yq6472tdbLRwpfX41FRXMq1YbqUHY7l58S
        +ruh1EO0xV1BRx6vTllwpEZcI3Vxc7PXVzOzulSTJfQlXBSHHl1IVyUPIAZUghO5o26mXV1ObOqUlLpP
        JuYmQ5VsHMmCEpdCv0nWtt1dZ81bNMsUNz8qx87r1NtrKSOcAGUNUrrdToOlXOcMnTKkRublzBgz6972
        WtcmIJBCwV2NujXplqxRQ9QwAmY+dnzArrADGZ5DVmAalKV2NzXO0sxJEV6tSWk3Fzeepm7ZE5gqS6Tn
        lgA5evuYTifjELqtrXmzBxMg9DrSFKixgBxxEQFe/Wxp0hYhQJ7W5zD5vn2X39FMJcOS5yeVS1jA3aWt
        pECVS17+q0g5GVc9M4rUqMhznchMpRAG9zrRDTJBVo7L1cHUaUetgWpcO6zcdabqEpPSaxEslSpFs7Q8
        Otp3O+NCC7OJ4tKVClAnpMXZS0yrkrp8gHuYV96UK12a+KJZgK5AXtqGRXiCDU63Ltetpst/SIVLuuSk
        7yMIQuqayybM2IKro+n5nmoW0mOs50WrSXJSRAu5KKEBwyvlqjvR9dnjuYnZps2H0M1dis2flsNiRkku
        jFZNJPNqe60sL50KPU9YPPCf/8QAGgEAAwEBAQEAAAAAAAAAAAAAAAIDAQQFBv/aAAoCAhADEAAAAPtf
        AM6od/PSYSqJ0IjzbVojCP8AP+kwaDzdOXo6eeyMYNmnXA3NUBsmY3HZKLrI+NnVHnqxmxbCT3Tv5zJ6
        jqdctXzupWZdzQOmcKaMczJSbYdUeznm8W7+dl3Y0qrKHFeLsusxpzNCpuCnXCydUnUWbbtkCb8lpNCt
        pmaKQtrAgjelydUnmHPTG64rqPyvCnN0dMdTQFZLIYT3th0yvE3nfKXiaHNTl6LztJWQGUjSb4Sfqheb
        LjJqs69cGOLo5q+rwvitgwu+d0Tpm5t40QEbNwbe3lR+WmN63EjIwG8lI1XQVrRbMDVYNLShdpad/Pup
        pnNWbSo2AjUTV0lTHM7I8V2ykWKFp6kaycEGBsMVzDntafq8XLfy+zu5QRv/xAA2EAACAgEDAwIFAwIF
        BAMAAAAAAQIRAwQhMRASQRNRBSJhcYEyUpEUQhUgobHRIzNDgmLB4f/aAAgBAQABPwCb3IZex0zvHkNL
        Bv52+REHtRbSFOX7j1B5CUk0OUlyxyl7ilL3EnldWR+Wq8Cm65FKT8jyP3MmfaketJSbsjntO7I5lt8x
        3u+Tvfud7p7ne/cU37mTMsUJZJv5YJt/ZGbPLU5Z5p/qm22eDv8AZix5pu0qXuz+la3bTHUUhrukJPw3
        QottighCTJE+RTrkxL1ZUvyYzgwLunFe8kPc2XkTXuNq+Sya8jOdqMcFBe78iTO+MbTHkb44Gr5bJcrY
        sTrwVYri9mz1a2aFki9jkSPj+qWPFDTRlvk+adftT4f3FGUnUU2R00pL5tvoQwwhxHcsm0ludrk0LGKC
        KQoJrydqoUESzV4ZLN7JmNZ9TNRxY7fl+EYIentdvy0QbT46YsuPFJTm2oxP8R0kv/Kl/KFrdPL/AMkH
        +SOWEuHFjl9EOa96LvySW5hxKK75P7EskVwrJTlJ+yNi0nySarZjY2r5E1XIm9i1fJa9y17l+zFqfmSi
        +5mtwxy6rLknvJy/FLg7e3bY3oadkn2oac3b4FFKhJsUSjc3pCjIlJNml+EZc1TzXCGz7P7n/wAGWGPT
        YOzHFR8JIxwTPl9hsaUlTEqY4w9jsjtWwlJPac19mLLnXGWf8kdVqoqvVb+6Q/iefH2p9s03umjDqoai
        EZxlaY5oUkKew3bGxyHwyM7Qmti9y1XNE9Tjjsrk/oR9bUuraXkx44Y49sV/+mvh2Zr/AHRRyVsOkNOT
        KO1UKNCo2NiELYqo0nwzBpW2055HzJnZRqJ+rmdcR2RFUjYdG1GRJSao7V7FfQa+hX0JNQVkpNvc0erl
        pZ+ex/qj/wDaMc8eWClF3F7pio7qO9DexbY5PcT2O5Ld8E9THiC7n/oOWSf6mYMEsr9oryKMYxUUtkI1
        8bhGXtKv5GqG0kP5hKmP7dPAj8EYuRslQqHFp0ambxYvrLZEY9oujsp0ZobJrx0VjsbrdsyTc3Y4tsXJ
        oda9NPtn/wBuXP0+ommlJStPyVt0knRbRKbRLUNWkd08nLIpJGHTPNvLaKEqpRVJG4rNTHuwZE/a1+Cf
        A1flC28nL5H9x7cuhRk1tbI4M8qahP8AgWj1G7eN1Vu6RFUkjehWS/VsamfqZX7R2RuJMp9K2JRuLT6L
        7HL4MuRSaUePJTNxx2bH5NBrFgfZN/I+P/iJpq0fhj6Z32xbIx9yKSivsafTub7pbRXj3KrZbIopisfD
        F8M1GWn3Y1Hxu3sL4PJrfMvwiHwnD/dkm/tQvhmkT4m//YWh0kWv+lF/e2enii9scF+C6W1IUmZ5XCde
        Is3KdCTNVl9OEmv1cIdJdF0Z4EZE1Nv36ZcnaqT3f+WSbPofD9ao1iySdcRl7dH01E7ml4RHlGDTcTmv
        sutlotUZp9sNuWaSd46/ad0aO6NlljPBKSozNLFP7MZ4EarKsmZpP5Y/7j6IoZ46ZlsmTksask23b5f+
        RDH+p9NDrm0sWSW/EGd30RNpJ2fqk+d2abSdiU58+F7C619eueVy24Rp59mT6S2PB56sb2HK2ajbDk+3
        TwIfI2WR5ZuMscl7onUoPdGT1Mj7q/B2y9mNSvj/ACMdb8WXt00Wt9VenkdTXD/cahtqMFzJmn0ywq3T
        n/sbpCvY3s3N6ZuN9sW/CQ222KxT74qS8oTLG2Wyb4IpUtjVtrBP8G5vQrFqk/CPVb9hZG3yhTZ3WP7s
        SteRR3JNVsZYrldLXsOkuEdy9kWmuBpDStlRaHEq2mm0/FGhzd8I5J13tU5fYry+ka2Nr6bU+meVVHrp
        ZXGUX44FV9ZNJdI1SNXXov7o8mw5Qjs2NzxvbdGHUdy2ZGdsi30UX5Fsixt2zdqmTj2PpbfREm+i466S
        /SivoYczhS5McoTQje+tb/QnJzm5M3NzDkeOafvsW76OVNDfc+keEaxtYv8A2XRvtVvwSbyNyfkkrY4S
        i7RhnkkuHS5ZCi1aLTPBkaYukoponFqT6rZ2No5ZwhtJktkabaEE/ZC2dkHW6ZjzrZSE0+uaTWN15YvD
        GS5Y9k15MM+/HF+fJ3KzLJrZci8D4I8fg1e2OK+vTUT3UUWjtTscXOShFbtkMcccFBcEsP7Nn7EZK6Ym
        zvqI27vcv6Ce/HTLFyW3gkkl0sabKou0S5MsmkzC3S+y6Rk+OkZvHwRyQn5p9M8+6dLhHcuCTouP5JM0
        s67k/NNHfGO4ndv6i5XSPCNY/kj92SmoRbY3bbO9j4Zo9P2x9SS3ktvojt3+g8dk8MZFThyvyPIdy/cK
        S90JjL+plj27+7HyKpbt0SkXuSe3Scm2Y8sdqZDNFo9VULNFVZHNC3yeqvqf10ccd7ZLV4lyn/A9Tio/
        qYfuPXxP+9HqQr9S/kjmjCakpL+R5FJ14RB7Ca26Lj8Gsf6PyajJ3NJPZEp9zNzBgWbJTXyrdlMoojFy
        2oeGPbuf0une/ZH+B6PTtfo/1Z/Q6f2kvyf4fh8Smh/DoeMkv4Q/hu+2X/QloMlO8kGicKk0mpLw0NPl
        oZ5JcdJRXKRiW3BFJCSoUFsKkxySVkndtjpjSoaK+rHBSRPGl4s0zbxRfvFC8EXTRdkZVWx8SyLGoe7u
        jtlNewopCSMWGOJJLhXZQsdsjiRwTe/IuDY2Eh9NZqVJvFDhfqf19h0OqGhpG1FREraRCNUeSFUxUSai
        OXd0fRpeyKVcIapEzQO8STfFkKopCM2bFghcrvwvcnJ6r58j3/tS8IlilDddEKNMWNNbnyoVEq7mTqyF
        GxsKSG0zWapwXpQe/l+yG1GPRUSVnbuRhzZKKUjbuT+pCt2WiPA2krG+97sXR0Kh0bEqpD32NA9px9mQ
        qhco1Oox6eKvdtbRMuaeadzdsxqoiryieGMna5HBrwNUyVlPpJWya3EUV01OoWFdsd5tG9t+5O+1G4rH
        YlvdG7RNeaFzH7kYqhRVobUUNuTsqmJFMYh9GrW41uaX5dRJe8SHg1Gqjg2XzT9jJOeWTlJ3J8sgrkiN
        8Csp0JEv1DET6T5Fx1zZY4Idz38Je7JSnkk5SdtiRl5XRda2JRbQovuj9xLY2i1ZJuW4vAuX1YhiTPHJ
        +TEms8H9aM+pjhXbF3P/AGJS7m27t9Mey6R46IbttqnY/wAdJFkm34FwWZMscUHKXCMuSWbJ3S+y+iKo
        om7k+D+BIf4F+CrXSqyItLdjdiVoXjgSd7Cg2hxaTb4HPfhHqu+Eer7pHqy8HrZK5Qp5sklGC7pPwlZL
        Qz02knqM813JLsiuLfuKamt7vpKe9KhIXsKVex/AvwQzzxy90/BDJCauLvpIk9i7N6HJJNt7JGfNLPK/
        7V+n/kV9OFuMjBVvsUST9jyLjp2tzTSFHu3ZsJJIRassz5KjV87sc0nsdzZZ3JeTSfDM+pqck8cH5fLX
        0RpdJg0sUsUKflvds+PZe2GLCvL7n+NkN7o9Qg4uaE0/JvfS0xElUmKUoSUotpmHUxy7PaQ96J8Ef1Nd
        NTneZ9sX8q5fu/8AgStCRRkdR+5GPljF0pXYqrgsSTTGmky1QnsIWzO9Ld+1mSbyScmOxMwafPqp9uKF
        1y+Ir7s0nwrDpn3TXqT93wvshREqPimb1tVk3tRfbH7RHyhml02fNj9SMNrrn2HjyY380JL7ojJcndXg
        TFL6GqhGOoyxSpKckvwySQuTElLFBvlonFFJSNW2sE6flIglQkiKVnbH2MsV3RVdKQkhpCSElRSEl2/k
        cUdq72UrRSIpNs1CSxuvLiUqY0hJerBeHJGLHDFBRhFRiuEiEU0rRGEfYcUr2Mm7T97KVEVckn7nwuMf
        6aO39zO1LhEtNgnfdji9vY1EYwy1HZWUkM//xAAnEQACAgEEAQQCAwEAAAAAAAAAAQIRAxASITETBCJB
        URQyIEJhgf/aAAgBAgEBPwATt0QVJGHoss6IR3S0ckb2KbFO9MuRYsbk/o9+Rt/NnjKFESYoiU8jqKZH
        Dsq3yKx5pw6SPyZfMReqS7R+Vj+bIzi17S3rejy11yZ05405FIYoiiihIUIYo+2kjtt/eklaLek+WYM/
        jqL6LtWWxyZ5aLyT4IY1BE43Bovjk+Sja/oaa7F0Z2rpC0rhjVMkytMGentkXwSlwY4ubpEIKCrRyVEc
        OGSuhYsa6iVH6Rx9IztuhdDlvlenGmX286sZgzf0n/w2uUq+CEYwjS1yPgw9NatuzN2hdEMrFJst6SVl
        OxD6GhowS9iQlrJpkXtaZY5UhGf9xyaHG3x2RhKKV/wkhl6TdEOEkRk4kZKRJtaNkZ7kN2Iz/uN2zDj3
        e4caPG2PDL7PDk+x4si+DJCUXytGMx2oikxTkh5ZI8kjyTMWSTbQuhHqf2KZGFcIURrWctqJtylbejQ0
        mQ/USLJcvXFxkF0ZMigv9GtxtOB67lFWycnNkuyitFwv5R4kmTzbFS5E9zbei7IzUh65J7nS6071cbFr
        KTsciKnN1G2eBYsUpz7p0bvsg+dEfNkJNofRlk+hJUNFCiNIoSEh8LT0+DzypukRxxxqkj1nGNL/AEkY
        vTJwTslDZ8l0j//EACYRAAICAgICAQMFAAAAAAAAAAABAhEQIRIxAyBBEzJhBEJRcYH/2gAIAQMBAT8A
        pj0fJ5O8p2NjFFuhQQ4WcWUQjzlQqSObLLQ5L4G7JOPj22Py8+lhQjK7PoxPo/lH0X+Di72cV6VYoIg0
        pui2LpDY22MsTc3d5WYo8kL2spWcCox7Y5ciP3Cw94u8eOOr9ERWfL47XJGiKJSSHK8Lsc5R0mc5P5Lf
        8iV/LIfOFr0iLKdHl8T+5bvtFpIdyHiCJZiQ6w/Hop+kfRMnG5Oh6ReIrQ1rCWIdCVnKhu36RlRp5iS7
        Y4pji0R2xdi6HFXmHRFKiclFUjmzmKUP6OUTlEg01ldE+8UKKFFHFE4qrz4ftLRbZe6r0qyEVFCeLJ95
        WE6Jbh/oyEOXfQnQpYjt5RFUiPRdHKz4HdvKz+1kYNvY9RzKDj+RKsxVLF5vQ8xiuziiTjFWLyucko9H
        EkqXpLReiCTGIbYrw3o7GJWxHk8jgkOTk7bP0622Lsn5qbVCkmLbP//Z
</value>
  </data>
</root>