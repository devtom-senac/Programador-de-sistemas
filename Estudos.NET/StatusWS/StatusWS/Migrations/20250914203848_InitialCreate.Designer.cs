// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StatusWS.Data;

#nullable disable

namespace StatusWS.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250914203848_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("StatusWS.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("EmployeeId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Photo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.HasKey("EmployeeId");

                    b.HasIndex("StatusId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("StatusWS.Models.Status", b =>
                {
                    b.Property<int>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("StatusId"));

                    b.Property<string>("CustomText")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("StatusTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("StatusId");

                    b.HasIndex("StatusTypeId");

                    b.ToTable("Statuses");

                    b.HasData(
                        new
                        {
                            StatusId = 1,
                            CustomText = "Nenhum status definido",
                            StatusTypeId = 1,
                            UpdateAt = new DateTime(2025, 9, 14, 20, 38, 47, 492, DateTimeKind.Utc).AddTicks(5230)
                        });
                });

            modelBuilder.Entity("StatusWS.Models.StatusType", b =>
                {
                    b.Property<int>("StatusTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("StatusTypeId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("IconUrl")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("StatusTypeId");

                    b.ToTable("StatusTypes");

                    b.HasData(
                        new
                        {
                            StatusTypeId = 1,
                            Description = "Vazio",
                            IconUrl = "https://cdn-icons-png.flaticon.com/512/4785/4785876.png"
                        },
                        new
                        {
                            StatusTypeId = 2,
                            Description = "Disponível",
                            IconUrl = "https://cdn-icons-png.flaticon.com/512/4785/4785876.png"
                        });
                });

            modelBuilder.Entity("StatusWS.Models.Employee", b =>
                {
                    b.HasOne("StatusWS.Models.Status", "Status")
                        .WithMany("Employees")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Status");
                });

            modelBuilder.Entity("StatusWS.Models.Status", b =>
                {
                    b.HasOne("StatusWS.Models.StatusType", "StatusType")
                        .WithMany("Statuses")
                        .HasForeignKey("StatusTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StatusType");
                });

            modelBuilder.Entity("StatusWS.Models.Status", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("StatusWS.Models.StatusType", b =>
                {
                    b.Navigation("Statuses");
                });
#pragma warning restore 612, 618
        }
    }
}
